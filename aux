--Ejercicio 2
--Sin pattern matching
eChica :: [[Integer]] -> [[Integer]]
eChica xs 
	| long xs > 1 && (head xs /= last xs) = [head xs ++ last xs] ++ eChica ( init (tail xs ) ) 
	| otherwise = xs

--Con pattern matching
eChica :: [[Integer]] -> [[Integer]]
eChica [] = []
eChica [a] = [a]
eChica (x:xs) = [ x ++ ult ] ++ eChica ( init xs )
	where ult = last xs
	
---------------------------------------

--Ejercicio 4
erotacion:: Integer -> [Integer] -> [[Integer]]
erotacion e xs 
	|e >= long xs = []
	|head (rotacion xs) == 1 = rotacion xs : erotacion (e+1) (rotacion xs)
	|otherwise = erotacion (e+1) (rotacion xs) ++ []

eEquivalente:: Integer -> Integer -> [[Integer]]
eEquivalente n k = erotacion 0 (e n k)
